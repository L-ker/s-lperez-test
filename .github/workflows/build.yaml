name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      anypoint_username: ${{ secrets.anypoint_platform_username }}
      anypoint_password: ${{ secrets.anypoint_platform_password }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Configure Maven Settings for Anypoint Exchange
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOL
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>anypoint-exchange-v4</id>
                <username>${{ secrets.anypoint_platform_username }}</username>
                <password>${{ secrets.anypoint_platform_password }}</password>
              </server>
            </servers>
          </settings>
          EOL

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(echo $artifactName1 | sed "s/.jar/-$commitHash.jar/")
          mv $artifactName1 $artifactName2

      - name: Upload artifact 
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      anypoint_username: ${{ secrets.anypoint_platform_username }}
      anypoint_password: ${{ secrets.anypoint_platform_password }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Configure Maven Settings for Anypoint Exchange
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOL
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>anypoint-exchange-v4</id>
                <username>${{ secrets.anypoint_platform_username }}</username>
                <password>${{ secrets.anypoint_platform_password }}</password>
              </server>
            </servers>
          </settings>
          EOL

      - uses: actions/download-artifact@v4
        with:
          name: artifacts

      - name: Deploy to Sandbox
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy -Dmule.artifact=$artifactName
